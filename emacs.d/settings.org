* Emacs configuration settings

** File Header
#+BEGIN_SRC emacs-lisp

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;; 
  ;; init.el - AUTO GENERATED FILE
  ;; 
  ;; Author : Sunil <sunhick@gmail.com>
  ;; Emacs customization file
  ;;
  ;; DO NOT EDIT THIS FILE. IF YOU WANT TO MODIFY
  ;; USE settings.org
  ;; 
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

#+END_SRC


** Visual tweaks
#+BEGIN_SRC emacs-lisp
  ;; Get rid of tool bar and menu bar
  ;; (menu-bar-mode 0)
  ;; Yeah, I'm keeping the text menu at the top. It doesn't
  ;; bother me. Whereas the toolbar i never use it and just
  ;; occupies space.
  (tool-bar-mode 0)
  (scroll-bar-mode 0)

  ;; I hate typing. Especially when emacs prompts
  ;; me with yes/no and i type 'y' or 'n' in a hurry
  ;; remap yes/no to y/n
  (fset 'yes-or-no-p 'y-or-n-p)

#+END_SRC


** Auto completion
#+BEGIN_SRC emacs-lisp
  ;; 
  ;; use company mode to auto complete.
  ;; 
  (use-package company
    :ensure t
    :pin melpa)
  (add-hook 'after-init-hook 'global-company-mode)

#+END_SRC


** Magit
#+BEGIN_SRC emacs-lisp
  ;; 
  ;; configure and bind the keystroke for magit.
  ;; 
  (use-package magit
    :ensure t)
  (require 'magit-status)
  (global-set-key(kbd "C-x g") 'magit-status)

  ;; set the magit repository
  (setq magit-repository-directories '( "~/prv/github/"))

#+END_SRC


** Counsel & Swiper
#+BEGIN_SRC emacs-lisp
  ;;
  ;; configure swipper for easy searching and navigations.
  ;; counsel is required for the C-x C-f to work. swiper
  ;; does install the counsel but need require line to
  ;; make it work.
  ;; 
  (use-package counsel
    :ensure t)
  (use-package swiper
    :ensure t)
  (use-package counsel-projectile
    :ensure t)
  (require 'counsel)
  (require 'swiper)
  (ivy-mode 1)
  (setq ivy-use-virtual-buffers t)
  (setq enable-recursive-minibuffers t)
  (global-set-key "\C-s" 'swiper)
  (global-set-key (kbd "C-c C-r") 'ivy-resume)
  (global-set-key (kbd "<f6>") 'ivy-resume)
  (global-set-key (kbd "M-x") 'counsel-M-x)
  (global-set-key (kbd "C-x C-f") 'counsel-find-file)
  (global-set-key (kbd "<f1> f") 'counsel-describe-function)
  (global-set-key (kbd "<f1> v") 'counsel-describe-variable)
  (global-set-key (kbd "<f1> l") 'counsel-find-library)
  (global-set-key (kbd "<f2> i") 'counsel-info-lookup-symbol)
  (global-set-key (kbd "<f2> u") 'counsel-unicode-char)
  (global-set-key (kbd "C-c g") 'counsel-git)
  (global-set-key (kbd "C-c j") 'counsel-git-grep)
  (global-set-key (kbd "C-c k") 'counsel-ag)
  (global-set-key (kbd "C-x l") 'counsel-locate)
  (global-set-key (kbd "C-S-o") 'counsel-rhythmbox)
  (define-key read-expression-map (kbd "C-r") 'counsel-expression-history)

  ;; configure projectile
  (projectile-global-mode)
  (setq projectile-completion-system 'ivy)

#+END_SRC


** Back-up

#+BEGIN_SRC emacs-lisp
  ;; configure which key for help on key strokes
  (use-package which-key
    :ensure t)
  (require 'which-key)
  (which-key-mode)

  ;; enable auto pair mode to automatically insert closing parenthesis.
  (use-package autopair
    :ensure t)
  (require 'autopair)
  (autopair-global-mode 1)

  ;; Show matching parenthensis
  (show-paren-mode 1)

  ;; install iedit 
  (use-package iedit
    :ensure t)
  (require 'iedit)
  ;; Fix iedit bug in Mac
  (define-key global-map (kbd "C-c ;") 'iedit-mode)
  ;; Fixing another key binding bug in iedit mode
  (define-key global-map (kbd "C-c o") 'iedit-mode)

  ;; switch window configuration
  (use-package switch-window
    :ensure t)
  (global-set-key (kbd "C-x w") 'switch-window)

  ;; configure clang format
  (use-package clang-format
    :ensure t)
  (require 'clang-format)

  ;; (global-set-key (kbd "C-c i") 'clang-format-region)
  (global-set-key (kbd "C-c u") 'clang-format-buffer)
  (setq clang-format-style-option "Google")

  ;; configure emacs org mode
  (use-package org-bullets
    :ensure t)
  (require 'org-bullets)
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))

  (use-package yasnippet-snippets
    :ensure t)

  ;; configure ggtags in c/c++/java mode for faster code navigations.
  (use-package ggtags
    :ensure t)
  (require 'ggtags)
  (add-hook 'c-mode-common-hook
            (lambda ()
              (when (derived-mode-p 'c-mode 'python-mode 'c++-mode 'java-mode 'Objective-C)
                (ggtags-mode 1))))

  ;; Backups at .saves folder in the current folder
  (setq backup-by-copying t      ; don't clobber symlinks
        backup-directory-alist
        '(("." . "~/.saves"))    
        delete-old-versions t
        kept-new-versions 6
        kept-old-versions 2
        version-control t)       ; use versioned backups

  ;; Below are auto generated by emacs
  (custom-set-variables
   ;; custom-set-variables was added by Custom.
   ;; If you edit it by hand, you could mess it up, so be careful.
   ;; Your init file should contain only one such instance.
   ;; If there is more than one, they won't work right.
   '(custom-enabled-themes (quote (tango-dark)))
   '(inhibit-startup-screen t)
   '(package-selected-packages
     (quote
      (org-bullets org-bullets-mode clang-format magit iedit autopair which-key counsel-projectile counsel use-package))))
  (custom-set-faces
   ;; custom-set-faces was added by Custom.
   ;; If you edit it by hand, you could mess it up, so be careful.
   ;; Your init file should contain only one such instance.
   ;; If there is more than one, they won't work right.
   )

#+END_SRC
