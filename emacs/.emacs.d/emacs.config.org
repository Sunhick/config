#+TITLE: Emacs org
#+DATE: <2018-12-05 Wed>
#+AUTHOR: Sunil
#+EMAIL: sunhick@gmail.com
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK") date:t
#+OPTIONS: e:t email:nil f:t inline:t num:t p:nil pri:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:t toc:t todo:t |:t
#+CREATOR: Emacs 25.3.1 (Org mode 8.2.10)
#+DESCRIPTION: Emacs init.el alternative using org mode
#+EXCLUDE_TAGS: noexport
#+KEYWORDS: Emacs config file
#+LANGUAGE: en
#+SELECT_TAGS: export
#+STARTUP: showeverything

* Base configurations
** use-package
   #+BEGIN_SRC emacs-lisp
     (dolist (package '(use-package))
       (unless (package-installed-p package)
         (package-refresh-contents)
         (package-install package)))
   #+END_SRC
** UI customization
   #+BEGIN_SRC emacs-lisp
     ;; Emacs title bar customizations
     (add-to-list 'default-frame-alist '(ns-transparent-titlebar . t))
     (add-to-list 'default-frame-alist '(ns-appearance . dark))

     (setq ns-use-proxy-icon nil)
     (setq frame-title-format nil)
     (setq frame-resize-pixelwise t)

     ;; Emacs font and themes
     (set-default-font "Monaco 12")
     (use-package twilight-theme
       :ensure t)

     ;; Get rid of tool bar and menu bar
     (menu-bar-mode 0)

     ;; Yeah, I'm keeping the text menu at the top. It doesn't
     ;; bother me. Whereas the toolbar i never use it and just
     ;; occupies space.
     (tool-bar-mode 0)
     (scroll-bar-mode 0)

     ;; I hate typing. Especially when emacs prompts
     ;; me with yes/no and i type 'y' or 'n' in a hurry
     ;; remap yes/no to y/n
     (fset 'yes-or-no-p 'y-or-n-p)

     ;; Enable visual line mode
     (global-visual-line-mode 1)

     ;; change the fringe
     (set-fringe-mode '(nil . 0))

     ;; Trash can support
     (setq delete-by-moving-to-trash t)

     ;; 80 chars is a good width.
     (set-default 'fill-column 80)

     ;; Display line & column numbers
     (setq line-number-mode t)
     (setq column-number-mode t)

     ;; use whitespaces instead of tabs
     (setq-default indent-tabs-mode nil)
     (add-hook 'before-save-hook 'delete-trailing-whitespace)

     ;; Show empty lines indicator
     (set-default 'indicate-empty-lines t)
   #+END_SRC
** org mode
   #+BEGIN_SRC emacs-lisp
     (use-package org
       :ensure t)
     (use-package org-bullets
       :ensure t
       :init
       (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))
   #+END_SRC
** Buffers
   #+BEGIN_SRC emacs-lisp
     (defalias 'list-buffers 'ibuffer)
   #+END_SRC
** Magit
   #+BEGIN_SRC emacs-lisp
     (use-package magit
       :ensure t
       :config
       (global-set-key(kbd "C-x g") 'magit-status)
       ;; set the magit repository
       (setq magit-repository-directories '( "~/prv/github/")))
   #+END_SRC
** Which key
   #+BEGIN_SRC emacs-lisp
     ;; configure which key for help on key strokes
     (use-package which-key
       :ensure t
       :config
       (which-key-mode))
   #+END_SRC
** AutoPair
   #+BEGIN_SRC emacs-lisp
     ;; enable auto pair mode to automatically insert closing parenthesis.
     (use-package autopair
       :ensure t
       :config
       (autopair-global-mode 1)

       ;; Show matching parenthensis
       ;; C-M-f     Move forward over a balanced expression
       ;; C-M-b     Move backward over a balanced expression
       ;; C-M-k     Kill balanced expression forward
       ;; C-M-SPC   put the mark at the end of the sexp.
       ;; C-M-n  Move forward over a parenthetical group
       ;; C-M-p  Move backward over a parenthetical group
       (show-paren-mode 1))
   #+END_SRC
** Counsel & swiper
   #+BEGIN_SRC emacs-lisp
     (use-package counsel
       :ensure t
       :bind (("\M-x" . counsel-M-x)
              ("\C-x \C-f" . counsel-find-file)))

     (use-package swiper
       :ensure t
       :bind (("\C-s" . swiper)))

     (use-package counsel-projectile
       :ensure t
       :config
       (projectile-mode)
       (setq projectile-completion-system 'ivy))

     (use-package flx
       :ensure t)
     ;; Enable fuzzy search in swiper. You can disable fuzzy
     ;; in swiper by M-r (toggle between fuzzy and complete match)
     (setq ivy-re-builders-alist
           '((swiper . ivy--regex-fuzzy)
             (t . ivy--regex-fuzzy)))
     (ivy-mode 1)

     (setq ivy-use-virtual-buffers t)
     (setq enable-recursive-minibuffers t)
   #+END_SRC
* Programming configurations
